plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
    id 'jacoco'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.example.adnapp"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

task jacocoTestReport (type: JacocoReport, dependsOn: [':app:connectedDebugAndroidTest',':app:testDebugUnitTest',':domain:testDebugUnitTest']){
    def domain = project(':domain')
    def directoriesToCoverage = layout.files("$buildDir/tmp/kotlin-classes/debug", "$domain.buildDir/tmp/kotlin-classes/debug")
    def mainSources = layout.files("$project.projectDir/src/main/java", "$domain.projectDir/src/main/java")

    def executionFilesFromConnectedAndroidTest = fileTree(
            dir: "$buildDir",
            includes: ["outputs/code_coverage/debugAndroidTest/connected/**coverage.ec"]
    )
    def executionFileForUnitTestInModule = "$buildDir/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"
    def executionFileForUnitTestInOtherModule = "$domain.buildDir/jacoco/testDebugUnitTest.exec"

    def executionFiles = layout.files(
            executionFilesFromConnectedAndroidTest,
            executionFileForUnitTestInModule,
            executionFileForUnitTestInOtherModule
    )

    sourceDirectories.setFrom(files([mainSources]))
    classDirectories.setFrom(files([directoriesToCoverage.asFileTree]))
    executionData.setFrom(executionFiles.asFileTree)

    reports {
        xml.enabled true
        html.enabled true
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':framework')
    implementation hiltDi
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha01'
    androidTestImplementation 'androidx.test:rules:1.4.1-alpha01'
    kapt hiltCompiler
    implementation ktx
    implementation appCompat
    implementation material
    implementation contraintLayout
    testImplementation junit
    androidTestImplementation junitExt
    androidTestImplementation espresso

    testImplementation coreTesting
    testImplementation roboelectric
    testImplementation mockito
    testImplementation coroutinesTest

}
